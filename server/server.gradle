
buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
    compile project(':client')
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.yaml:snakeyaml:1.14")
    compile("org.apache.httpcomponents:httpclient")
    compile("org.apache.commons:commons-lang3:3.4")
    //compile("com.maxmind.geoip:geoip-api:1.2.14")
    //compile("com.maxmind.geoip2:geoip2:2.2.0")
    //compile("com.google.guava:guava:18.0")
    compile 'org.apache.commons:commons-pool2:2.4.1'
    compile("org.springframework.boot:spring-boot-starter-aop")

    testCompile("junit:junit")
    testCompile("org.mockito:mockito-core")
    testCompile("com.jayway.jsonpath:json-path")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}


repositories {
    mavenCentral()
    mavenLocal()
}

/*
run { //Skip Ember build
    gradle.taskGraph.whenReady { graph ->
        graph.getAllTasks().each { task ->
            if (task.name == 'run' || task.name == 'bootRun') {
                tasks.getByPath(':client:emberTest').enabled = false
                tasks.getByPath(':client:emberBuild').enabled = false
            }
        }
    }
    idea {
        module {
            jdkName = '1.8'
            inheritOutputDirs = false
            outputDir = file("$buildDir/classes/main/")
        }
    }
}*/

